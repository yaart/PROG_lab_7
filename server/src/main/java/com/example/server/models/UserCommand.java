package com.example.server.models;

import java.util.List;

/**
 * Класс, представляющий команду, связанную с пользователем.
 * <p>
 * Наследуется от {@link Command} и расширяет её, добавляя информацию о пользователе,
 * которая может быть использована при выполнении команды на сервере.
 * </p>
 *
 * <p>Типичное использование:
 * <ul>
 *     <li>Аутентификация пользователя</li>
 *     <li>Выполнение действий от имени определённого пользователя</li>
 *     <li>Передача данных пользователя в составе команды</li>
 * </ul>
 * </p>
 *
 * @see Command — базовый класс для всех команд
 * @see User — объект пользователя, связанный с этой командой
 */
public class UserCommand extends Command {

    /**
     * Объект пользователя, который ассоциирован с данной командой.
     * <p>Может использоваться для проверки прав, аутентификации или передачи контекста выполнения.</p>
     */
    public User user;

    /**
     * Конструктор по умолчанию.
     * <p>Используется, например, фреймворками сериализации (например, Jackson).</p>
     */
    public UserCommand() {
        super();
    }

    /**
     * Создаёт новый объект {@link UserCommand} с указанием имени команды, списка аргументов и связанного пользователя.
     *
     * @param name       имя команды, не должно быть {@code null}
     * @param arguments  список аргументов команды, может быть пустым или {@code null}
     * @param user       объект пользователя, связанный с командой, может быть {@code null}
     * @see Command#Command(String, List) — конструктор базового класса
     */
    public UserCommand(String name, List<Object> arguments, User user) {
        super(name, arguments);
        this.user = user;
    }
}